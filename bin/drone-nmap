#!/usr/bin/env python
# Copyright (c) 2013 Tom Steele, Dan Kottmann, FishNet Security
# See the file license.txt for copying permission

import os
import sys
sys.path.append(os.path.abspath(
    os.path.join(os.path.dirname(__file__), '..'))
)
from optparse import OptionParser
from lairdrone import api
from lairdrone import nmap


def main():
    """
    main point of execution

    :return:
    """

    usage = "usage: %prog <project_id> <file> [xml|grep] (default xml)"
    description = "%prog imports Nmap files into Lair"
    parser = OptionParser(usage=usage, description=description,
                          version="%prog 0.0.1")

    parser.add_option('-p', '--project-id', dest='project_id')
    parser.add_option('-f', '--file', dest='file')
    parser.add_option('-r', '--result-format', dest='result_format', 
        help='nmap file output format [xml,grep] (default: xml)', default='xml')

    (options, args) = parser.parse_args()
    # required input params: project_id, file
    if not options.project_id or not options.file:
        print parser.get_usage()
        sys.exit(1)
    # Connect to the database
    db = api.db_connect()

    if options.result_format == 'xml':
        project = nmap.parse_xml(options.project_id, options.file)
    elif options.result_format == 'grep':
        project = nmap.parse_grep(options.project_id, options.file)
    else:
        print parser.get_usage()
        sys.exit(1)
    api.save(project, db, nmap.TOOL)
    sys.exit(0)

if __name__ == '__main__':
    main()
